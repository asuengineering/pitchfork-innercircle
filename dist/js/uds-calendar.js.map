{"version":3,"file":"/uds-calendar.js","mappings":"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","sources":["webpack://pitchfork-innercircle/./src/scripts/uds-calendar.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n\n    let calendarDates = Object.values(CALDATA.events);\n    initCalendar(calendarDates);\n});\n\nfunction initCalendar(dateArray) {\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n    const desktopDaysOfWeek = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ];\n    const mobileDaysOfWeek = ['Su', 'M', 'Tu', 'W', 'Th', 'F', 'Sa'];\n    const gridsize = 42;\n\n    // const oldestDate = dateArray.reduce((c, n) =>\n    //     Date.parse(n) < Date.parse(c) ? n : c\n    // );\n\n    const latestDate = dateArray.reduce((c, n) =>\n        Date.parse(n) > Date.parse(c) ? n : c\n    );\n\n    const state = {\n        month: new Date(latestDate).getMonth(),\n        year: new Date(latestDate).getFullYear(),\n    };\n\n    const datesForGrid = (year, month) => {\n        const today = new Date();\n        const dates = [];\n        const firstDay = new Date(year, month).getDay();\n        const totalDaysInMonth = new Date(year, month + 1, 0).getDate();\n        const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n        // Loop through dateArray, remove all dates that are not in the displayed month.\n        // Create array of numbers indicating day of the month. (12/31/2021 = 31)\n        // Later, if i is in this array, add today class. \n        var currentMonthDates = [];\n        dateArray.forEach(function (item, index) {\n            checkDate = new Date(item);\n            if (checkDate.getMonth() == state.month) {\n                currentMonthDates.push(checkDate.getDate());\n            }\n        });\n\n        console.log(dateArray);\n        console.log(currentMonthDates);\n\n        // Days from prev month to show in the grid\n        for (let i = 1; i <= firstDay; i++) {\n            const prevMonthDate = totalDaysInPrevMonth - firstDay + i;\n            const key = new Date(\n                state.year,\n                state.month - 1,\n                prevMonthDate\n            ).toLocaleString();\n            dates.push({\n                key: key,\n                date: prevMonthDate,\n                monthClass: 'prev'\n            });\n        }\n\n        // Days of the current month to show in the grid\n        for (let i = 1; i <= totalDaysInMonth; i++) {\n\n            const key = new Date(state.year, state.month, i).toLocaleString();\n            if (currentMonthDates.includes(i)) {\n                dates.push({\n                    key: key,\n                    date: i,\n                    monthClass: 'current',\n                    todayClass: 'today',\n                });\n            } else {\n                dates.push({\n                    key: key,\n                    date: i,\n                    monthClass: 'current'\n                });\n            }\n        }\n\n        // If there is space left over in the grid, then show the dates for the next month\n        if (dates.length < gridsize) {\n            const count = gridsize - dates.length;\n            for (let i = 1; i <= count; i++) {\n                const key = new Date(state.year, state.month + 1, i).toLocaleString();\n                dates.push({\n                    key: key,\n                    date: i,\n                    monthClass: 'next'\n                });\n            }\n        }\n\n        return dates;\n    };\n\n    const render = () => {\n        const calendarContainer = document.getElementById('calendar');\n        calendarContainer.innerHTML = `\n        <h4><span class=\"highlight-black\">${months[state.month]} ${state.year\n            }</span></h4>\n        <div class=\"calendar-grid\">\n          <div class=\"heading desktop\">\n            ${desktopDaysOfWeek.map((day) => `<p>${day}</p>`).join('')}\n          </div>\n          <div class=\"heading mobile\">\n            ${mobileDaysOfWeek.map((day) => `<p>${day}</p>`).join('')}\n          </div>\n          <div class=\"body\">\n            ${datesForGrid(state.year, state.month)\n                .map(\n                    (date) =>\n                        `<h3 id=\"${date.key}\" class=\"calendar-item ${date.monthClass\n                        }\" ${date.todayClass\n                            ? `aria-label=\"${date.todayClass[0].toUpperCase()}${date.todayClass.slice(\n                                1\n                            )}\"`\n                            : ''\n                        }>\n                    <span class=\"${date.todayClass ? date.todayClass : ''}\">${date.date\n                        }</span>\n                  </h3>`\n                )\n                .join('')}\n          </div>\n        </div>\n        <div class=\"calendar-nav\">\n          <button id=\"prev-month\" aria-label=\"Previous month\"><span class=\"fas fa-angle-left\"></span></button>\n          <button id=\"next-month\" aria-label=\"Next month\"><span class=\"fas fa-angle-right\"></span></button>\n        </div>\n    `;\n    };\n\n    const showCalendar = (monthIndicator) => {\n        console.log(state);\n        var date = new Date(state.year, state.month + monthIndicator);\n        state.year = date.getFullYear();\n        state.month = date.getMonth();\n        render();\n    };\n\n    document.addEventListener('click', (ev) => {\n        if (ev.target.id === 'prev-month') {\n            showCalendar(-1);\n        }\n        if (ev.target.id === 'next-month') {\n            showCalendar(1);\n        }\n    });\n\n    showCalendar(0);\n};"],"names":["document","addEventListener","calendarDates","Object","values","CALDATA","events","initCalendar","dateArray","months","desktopDaysOfWeek","mobileDaysOfWeek","gridsize","latestDate","reduce","c","n","Date","parse","state","month","getMonth","year","getFullYear","datesForGrid","today","dates","firstDay","getDay","totalDaysInMonth","getDate","totalDaysInPrevMonth","currentMonthDates","forEach","item","index","checkDate","push","console","log","i","prevMonthDate","key","toLocaleString","date","monthClass","includes","todayClass","length","count","render","calendarContainer","getElementById","innerHTML","map","day","join","toUpperCase","slice","showCalendar","monthIndicator","ev","target","id"],"sourceRoot":""}